{
  "time": "2025-10-01T00:58:32.912Z",
  "handler": "health",
  "messageSummary": {
    "author": "1419504589748834375",
    "channel": "1422539576144167006"
  },
  "error": "DiscordAPIError[40060]: Interaction has already been acknowledged.\n    at handleErrors (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:762:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async BurstHandler.runRequest (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:866:23)\n    at async _REST.request (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:1307:22)\n    at async ChatInputCommandInteraction.reply (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\discord.js\\src\\structures\\interfaces\\InteractionResponses.js:200:22)\n    at async wrapped (file:///c:/Users/Student/Desktop/GymBroBot/bot.js:1610:17)\n    at async Client.<anonymous> (file:///c:/Users/Student/Desktop/GymBroBot/bot.js:2451:5)",
  "handlerSource": "async execute(context, message, args) {\r\n    const guild = message.guild || (message.channel && message.channel.guild) || null;\r\n    const { embed } = await runHealthCheck(context, guild);\r\n\r\n    // Try to post/update in #gbb-health if present, otherwise reply with embed\r\n    try {\r\n      if (guild) {\r\n        const ch = guild.channels.cache.find(c => (c.name||'').toLowerCase() === 'gbb-health' && c.type === 0);\r\n        if (ch) {\r\n          // try to find an existing pinned health message\r\n          const pins = await ch.messages.fetchPinned();\r\n          const existing = pins.find(m => m.author && m.author.id === context.client.user.id && m.embeds && m.embeds[0] && m.embeds[0].title && m.embeds[0].title.includes('GymBotBro — Health Scan'));\r\n          if (existing) {\r\n            await existing.edit({ embeds: [embed] });\r\n            return message.reply('Updated the pinned health scan in #gbb-health');\r\n          }\r\n          const sent = await ch.send({ embeds: [embed] });\r\n          try { await sent.pin(); } catch(e){}\r\n          return message.reply('Posted health scan to #gbb-health');\r\n        }\r\n      }\r\n    } catch (e) { console.error('health command post failed', e); }\r\n\r\n    return message.reply({ embeds: [embed] });\r\n  }"
}
---
{
  "time": "2025-10-01T00:59:11.387Z",
  "handler": "health",
  "messageSummary": {
    "author": "1419504589748834375",
    "channel": "1422539576144167006"
  },
  "error": "DiscordAPIError[40060]: Interaction has already been acknowledged.\n    at handleErrors (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:762:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async BurstHandler.runRequest (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:866:23)\n    at async _REST.request (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:1307:22)\n    at async ChatInputCommandInteraction.reply (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\discord.js\\src\\structures\\interfaces\\InteractionResponses.js:200:22)\n    at async wrapped (file:///c:/Users/Student/Desktop/GymBroBot/bot.js:1610:17)\n    at async Client.<anonymous> (file:///c:/Users/Student/Desktop/GymBroBot/bot.js:2451:5)",
  "handlerSource": "async execute(context, message, args) {\r\n    const guild = message.guild || (message.channel && message.channel.guild) || null;\r\n    const { embed } = await runHealthCheck(context, guild);\r\n\r\n    // Try to post/update in #gbb-health if present, otherwise reply with embed\r\n    try {\r\n      if (guild) {\r\n        const ch = guild.channels.cache.find(c => (c.name||'').toLowerCase() === 'gbb-health' && c.type === 0);\r\n        if (ch) {\r\n          // try to find an existing pinned health message\r\n          const pins = await ch.messages.fetchPinned();\r\n          const existing = pins.find(m => m.author && m.author.id === context.client.user.id && m.embeds && m.embeds[0] && m.embeds[0].title && m.embeds[0].title.includes('GymBotBro — Health Scan'));\r\n          if (existing) {\r\n            await existing.edit({ embeds: [embed] });\r\n            return message.reply('Updated the pinned health scan in #gbb-health');\r\n          }\r\n          const sent = await ch.send({ embeds: [embed] });\r\n          try { await sent.pin(); } catch(e){}\r\n          return message.reply('Posted health scan to #gbb-health');\r\n        }\r\n      }\r\n    } catch (e) { console.error('health command post failed', e); }\r\n\r\n    return message.reply({ embeds: [embed] });\r\n  }"
}
---
{
  "time": "2025-10-01T00:59:28.547Z",
  "handler": "daily",
  "messageSummary": {
    "author": "1419504589748834375",
    "channel": "1422539576144167006"
  },
  "error": "DiscordAPIError[40060]: Interaction has already been acknowledged.\n    at handleErrors (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:762:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async BurstHandler.runRequest (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:866:23)\n    at async _REST.request (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\@discordjs\\rest\\dist\\index.js:1307:22)\n    at async ChatInputCommandInteraction.reply (c:\\Users\\Student\\Desktop\\GymBroBot\\node_modules\\discord.js\\src\\structures\\interfaces\\InteractionResponses.js:200:22)\n    at async wrapped (file:///c:/Users/Student/Desktop/GymBroBot/bot.js:1610:17)\n    at async Client.<anonymous> (file:///c:/Users/Student/Desktop/GymBroBot/bot.js:2451:5)",
  "handlerSource": "async execute(context, message, args) {\r\n    try {\r\n      const storage = context.storage;\r\n      const userId = message.author.id;\r\n      const now = Date.now();\r\n      const economy = await storage.load('economy', {});\r\n      if (!economy[userId]) economy[userId] = { balance: 0, lastClaim: 0, lastCheckin: null, streak: 0 };\r\n      if (now - (economy[userId].lastClaim || 0) < 86400000) {\r\n        const hours = Math.ceil((86400000 - (now - (economy[userId].lastClaim || 0))) / 3600000);\r\n        return message.reply(`⏳ You already grabbed your daily protein shake! Come back in ${hours}h.`);\r\n      }\r\n      const reward = 100;\r\n      economy[userId].balance += reward;\r\n      economy[userId].lastClaim = now;\r\n      await storage.save('economy', economy);\r\n      return message.reply(`💪 You claimed your daily **${reward} GymCoins**!\\nTotal: ${economy[userId].balance}`);\r\n    } catch (e) {\r\n      console.error('daily command error', e);\r\n      return message.reply('Error claiming daily reward.');\r\n    }\r\n  }"
}
---
